#include <cs50.h>
#include <stdio.h>
#include <string.h>
#include <ctype.h>

//takes key as the command line arguement

void cipher_text(string plaintext, string key);

int main(int argc, string argv[])
{	
    string comm_line_msg = "\nIssue with the command line arguement. Please enter a single alphabetical string\n";
    
    string keyword = argv[1];
       
	
    if (argc != 2)
    {
        printf("%s",comm_line_msg);
        return 1;
    }
   	else        //checking if the keyword is purely alphabetic
    {
        for(int i = 0 ; i < strlen(keyword) ; i++)
	    {
            if (!(((keyword[i] >= 'a') && (keyword[i] <= 'z')) || ((keyword[i] >= 'A') && (keyword[i] <= 'Z'))))
            {
                
                printf("%s",comm_line_msg);
               	return 1;
            }
        
    	}

    }
    
//***********************Entering the plain text****************************************
    
    printf("Please Enter the text you want to encrypt : ");
    string plaintext = GetString();
    
    char key_text[strlen(plaintext)];
    //char temp;
    int j = 0;
    for (int i = 0; i < strlen(plaintext); i++)
    {
     	
        if((tolower(plaintext[i]) >= 'a')   && (tolower(plaintext[i]) <= 'z'))
        {
            //printf("a");
            key_text[i] = keyword[j % strlen(keyword)];
            j++;
        }
        
        else
        {
            //printf("b");
            key_text[i] = plaintext[i];
            
            
        }
        
        printf("%c",key_text[i]);
        
    }        
	cipher_text(plaintext, key_text);
}

//************************************  Cipher     **********************************
void cipher_text(string plaintext, string key)
{   
    printf("\n%s\n","ciphering the text now...");
    int len = strlen(plaintext);
    char result[len];
    char dummy_text;
    char dummy_key;
   
    for (int counter = 0; counter < len; counter ++) 
        
    {	
        dummy_text = tolower(plaintext[counter]);
        dummy_key = tolower(key[counter]);
        
        if ((dummy_text >= 'a')   && (dummy_text <= 'z'))
        {
            
       		/*printf("%c - %d %c - %d %c - %d\n",dummy_text,(int)dummy_text - 97, dummy_key, (int)dummy_key - 97, (char)(((int)dummy_text - 97 + (int)dummy_key - 97) % 26) + 97, (((int)dummy_text - 97 + (int)dummy_key - 97) % 26) + 97);*/
           
            if (islower(plaintext[counter]))
            {
                result[counter] = (char)(((int)dummy_text - 97 + (int)dummy_key - 97) % 26) + 97;                
            }
            else
            { 
                result[counter] = (char)(((int)dummy_text - 97 + (int)dummy_key - 97) % 26) + 65;
            }
                       
        	printf("%c",result[counter]);
            
        }
        else
        {
            result[counter] = plaintext[counter];
            printf("%c",result[counter]);
        }
        
    }
    
}; 
    

